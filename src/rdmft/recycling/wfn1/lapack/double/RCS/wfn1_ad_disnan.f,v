head	1.4;
access;
symbols;
locks
	D3Y133:1.4; strict;
comment	@c @;


1.4
date	2015.03.17.06.41.04;	author D3Y133;	state Exp;
branches;
next	1.3;

1.3
date	2014.12.26.07.06.41;	author D3Y133;	state Exp;
branches;
next	1.2;

1.2
date	2014.12.24.08.17.45;	author D3Y133;	state Exp;
branches;
next	1.1;

1.1
date	2014.12.21.08.31.55;	author D3Y133;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Added interface declarations.
@
text
@      LOGICAL FUNCTION WFN1_AD_DISNAN( DIN )
      USE WFN1_AD1
      IMPLICIT NONE
#include "lapack/double/intf_wfn1_ad_dlaisnan.fh"
*
*  -- LAPACK auxiliary routine (version 3.2.2) --
*  -- LAPACK is a software package provided by Univ. of Tennessee,    --
*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
*     June 2010
*
*     .. Scalar Arguments ..
      TYPE(WFN1_AD_DBLE) :: DIN
*     ..
*
*  Purpose
*  =======
*
*  DISNAN returns .TRUE. if its argument is NaN, and .FALSE.
*  otherwise.  To be replaced by the Fortran 2003 intrinsic in the
*  future.
*
*  Arguments
*  =========
*
*  DIN     (input) DOUBLE PRECISION
*          Input to test for NaN.
*
*  =====================================================================
*
*  ..
*  .. Executable Statements ..
      WFN1_AD_DISNAN = WFN1_AD_DLAISNAN(DIN,DIN)
      RETURN
      END
@


1.3
log
@It is amazing that there still are routines with unnecessary 
implicit typing.
@
text
@d4 1
a29 3
*  .. External Functions ..
      LOGICAL WFN1_AD_DLAISNAN
      EXTERNAL WFN1_AD_DLAISNAN
@


1.2
log
@*** empty log message ***
@
text
@d3 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
      LOGICAL FUNCTION DISNAN( DIN )
d33 1
a33 1
      DISNAN = WFN1_AD_DLAISNAN(DIN,DIN)
@
