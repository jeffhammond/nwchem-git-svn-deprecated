      SUBROUTINE cr_ccsd_t_E(a_i0,d_i1_2,d_t1,d_t2,k_i1_offset_2,k_t1_of
     &fset,k_t2_offset,l_i1_offset_2,t_h1b,t_h2b,t_h3b,t_p4b,t_p5b,t_p6b
     &,toggle)
C     $Id$
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p4 p5 p6 h1 h2 h3 )_tt + = 1 * P( 9 ) * t ( p4 p5 h1 h2 )_t * t ( p6 h3 )_t
C     i0 ( p4 p5 p6 h1 h2 h3 )_ttt + = -2/3 * P( 9 ) * t ( p4 h1 )_t * i1 ( p5 p6 h2 h3 )_tt
C         i1 ( p4 p5 h1 h2 )_tt + = -1/4 * P( 4 ) * t ( p4 h1 )_t * t ( p5 h2 )_t
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "util.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER t_p4b
      INTEGER t_p5b
      INTEGER t_p6b
      INTEGER t_h1b
      INTEGER t_h2b
      INTEGER t_h3b
      INTEGER toggle
      INTEGER d_t2
      INTEGER k_t2_offset
      INTEGER d_t1
      INTEGER k_t1_offset
      INTEGER d_i1_2
      INTEGER k_i1_offset_2
      INTEGER l_i1_offset_2
      INTEGER size_i1_2
c === jaguar ===
      INTEGER unitn
c ==============
      DOUBLE PRECISION a_i0(*)
      CHARACTER*255 filename
      IF (toggle .eq. 3) THEN
      CALL DELETEFILE(d_i1_2)
      IF (.not.MA_POP_STACK(l_i1_offset_2)) CALL ERRQUIT('cr_ccsd_t_E',-
     &1,MA_ERR)
      END IF
      IF (toggle .eq. 2) CALL cr_ccsd_t_E_1(d_t2,k_t2_offset,d_t1,k_t1_o
     &ffset,a_i0,t_p4b,t_p5b,t_p6b,t_h1b,t_h2b,t_h3b)
      IF (toggle .eq. 1) CALL OFFSET_cr_ccsd_t_E_2_1(l_i1_offset_2,k_i1_
     &offset_2,size_i1_2)
      IF (toggle .eq. 1) CALL TCE_FILENAME('cr_ccsd_t_E_2_1_i1',filename
     &)
      IF (toggle .eq. 1) CALL CREATEFILE(filename,d_i1_2,size_i1_2)
c === jaguar ===
      if(read_in3.and.(toggle.eq.1))  then
       call util_file_name('ei1_2',.false.,.false.,filename)
       unitn=88
       call read_tensor(filename,d_i1_2,size_i1_2,unitn)
       call ga_sync()
       go to 101
      end if
c ==============
      IF (toggle .eq. 1) CALL cr_ccsd_t_E_2_1(d_t1,k_t1_offset,d_t1,k_t1
     &_offset,d_i1_2,k_i1_offset_2)
  101 continue
      IF (toggle .eq. 1) CALL RECONCILEFILE(d_i1_2,size_i1_2)
c === jaguar ===
      if(write_in3.and.(toggle.eq.1))  then
       call util_file_name('ei1_2',.false.,.false.,filename)
       unitn=88
       call write_tensor(filename,d_i1_2,size_i1_2,unitn)
       call ga_sync()
      end if
c ==============
ccx 101  continue
      IF (toggle .eq. 2) CALL cr_ccsd_t_E_2(d_t1,k_t1_offset,d_i1_2,k_i1
     &_offset_2,a_i0,t_p4b,t_p5b,t_p6b,t_h1b,t_h2b,t_h3b)
      RETURN
      END
      SUBROUTINE cr_ccsd_t_E_1(d_a,k_a_offset,d_b,k_b_offset,a_c,t_p4b,t
     &_p5b,t_p6b,t_h1b,t_h2b,t_h3b)
C     $Id$
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p4 p5 p6 h1 h2 h3 )_tt + = 1 * P( 9 ) * t ( p4 p5 h1 h2 )_t * t ( p6 h3 )_t
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER t_p4b
      INTEGER t_p5b
      INTEGER t_p6b
      INTEGER t_h1b
      INTEGER t_h2b
      INTEGER t_h3b
      INTEGER p4b
      INTEGER p5b
      INTEGER p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER p6b_2
      INTEGER h3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
c -- peta-exa --
      INTEGER a3(9,6)
      INTEGER ia6,ja6
c --------------
      DOUBLE PRECISION a_c(*)
      LOGICAL skipped
c
cc      DO p4b = noab+1,noab+nvab
cc      DO p5b = p4b,noab+nvab
cc      DO p6b = noab+1,noab+nvab
cc      DO h1b = 1,noab
cc      DO h2b = h1b,noab
cc      DO h3b = 1,noab
c
        a3(1,1)=t_p4b
        a3(1,2)=t_p5b
        a3(1,3)=t_p6b
        a3(1,4)=t_h1b
        a3(1,5)=t_h2b
        a3(1,6)=t_h3b
c
        a3(2,1)=t_p4b
        a3(2,2)=t_p5b
        a3(2,3)=t_p6b
        a3(2,4)=t_h2b
        a3(2,5)=t_h3b
        a3(2,6)=t_h1b
c
        a3(3,1)=t_p4b
        a3(3,2)=t_p5b
        a3(3,3)=t_p6b
        a3(3,4)=t_h1b
        a3(3,5)=t_h3b
        a3(3,6)=t_h2b
c
        a3(4,1)=t_p5b
        a3(4,2)=t_p6b
        a3(4,3)=t_p4b
        a3(4,4)=t_h1b
        a3(4,5)=t_h2b
        a3(4,6)=t_h3b
c
        a3(5,1)=t_p5b
        a3(5,2)=t_p6b
        a3(5,3)=t_p4b
        a3(5,4)=t_h2b
        a3(5,5)=t_h3b
        a3(5,6)=t_h1b
c
        a3(6,1)=t_p5b
        a3(6,2)=t_p6b
        a3(6,3)=t_p4b
        a3(6,4)=t_h1b
        a3(6,5)=t_h3b
        a3(6,6)=t_h2b
c
        a3(7,1)=t_p4b
        a3(7,2)=t_p6b
        a3(7,3)=t_p5b
        a3(7,4)=t_h1b
        a3(7,5)=t_h2b
        a3(7,6)=t_h3b
c
        a3(8,1)=t_p4b
        a3(8,2)=t_p6b
        a3(8,3)=t_p5b
        a3(8,4)=t_h2b
        a3(8,5)=t_h3b
        a3(8,6)=t_h1b
c
        a3(9,1)=t_p4b
        a3(9,2)=t_p6b
        a3(9,3)=t_p5b
        a3(9,4)=t_h1b
        a3(9,5)=t_h3b
        a3(9,6)=t_h2b
c
        do ia6=1,8
         if(a3(ia6,1).ne.0) then
         do ja6=ia6+1,9
          if((a3(ia6,1).eq.a3(ja6,1)).and.(a3(ia6,2).eq.a3(ja6,2))
     &     .and.(a3(ia6,3).eq.a3(ja6,3)).and.(a3(ia6,4).eq.a3(ja6,4))
     &     .and.(a3(ia6,5).eq.a3(ja6,5)).and.(a3(ia6,6).eq.a3(ja6,6)))
     &     then
           a3(ja6,1)=0
           a3(ja6,2)=0
           a3(ja6,3)=0
           a3(ja6,4)=0
           a3(ja6,5)=0
           a3(ja6,6)=0
          end if
         enddo 
         end if
        enddo 
c
      do ia6=1,9
      p4b=a3(ia6,1)
      p5b=a3(ia6,2)
      p6b=a3(ia6,3)
      h1b=a3(ia6,4)
      h2b=a3(ia6,5)
      h3b=a3(ia6,6)
      if((p4b.le.p5b).and.(h1b.le.h2b).and.(p4b.ne.0)) then
      skipped = .false.
      IF (.not.skipped) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+i
     &nt_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_t,irrep_t)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_m
     &b(k_range+h3b-1)
ccx      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
ccx     & ERRQUIT('cr_ccsd_t_E_1',0,MA_ERR)
ccx      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p5b,h1b,h2b,p4b_1,p5b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_2(p6b,h3b,p6b_2,h3b_2)
      dim_common = 1
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p6b-1) * int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('cr_ccsd_t_E_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &cr_ccsd_t_E_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('cr_ccsd_t_E_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('cr_ccsd_t_E_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &cr_ccsd_t_E_1',5,MA_ERR)
      CALL GET_HASH_BLOCK_MA(dbl_mb(d_b),dbl_mb(k_b),dimb,
     & int_mb(k_b_offset),(h3b_2
     & - 1 + noab * (p6b_2 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+h3b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('cr_ccsd_t_E_1',6,MA_ERR)
ccx      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
ccx     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
ccx     &t),dima_sort)
ccx      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('cr_ccsd_t_E_1',7,MA
ccx     &_ERR)
ccx      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('cr_ccsd_t_E_1',8,MA
ccx     &_ERR)
ccx      END IF
ccx      END IF
ccx      END IF
      IF ((t_p4b .eq. p4b) .and. (t_p5b .eq. p5b) .and. (t_p6b .eq. p6b)
     & .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h2b) .and. (t_h3b .eq. h
     &3b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
ccx     &mb(k_range+p5b-1),int_mb(k_range+p4b-1),6,5,2,4,3,1,1.0d0)
      call sd_E_1(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort))
      END IF
      IF ((t_p4b .eq. p4b) .and. (t_p5b .eq. p5b) .and. (t_p6b .eq. p6b)
     & .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h1b) .and. (t_h3b .eq. h
     &2b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
ccx     &mb(k_range+p5b-1),int_mb(k_range+p4b-1),6,5,2,1,4,3,1.0d0)
      call sd_E_2(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort))
      END IF
      IF ((t_p4b .eq. p4b) .and. (t_p5b .eq. p5b) .and. (t_p6b .eq. p6b)
     & .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h3b) .and. (t_h3b .eq. h
     &2b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
ccx     &mb(k_range+p5b-1),int_mb(k_range+p4b-1),6,5,2,4,1,3,-1.0d0)
      call sd_E_3(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort))
      END IF
      IF ((t_p4b .eq. p6b) .and. (t_p5b .eq. p4b) .and. (t_p6b .eq. p5b)
     & .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h2b) .and. (t_h3b .eq. h
     &3b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
ccx     &mb(k_range+p5b-1),int_mb(k_range+p4b-1),2,6,5,4,3,1,1.0d0)
      call sd_E_4(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort))
      END IF
      IF ((t_p4b .eq. p6b) .and. (t_p5b .eq. p4b) .and. (t_p6b .eq. p5b)
     & .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h1b) .and. (t_h3b .eq. h
     &2b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
ccx     &mb(k_range+p5b-1),int_mb(k_range+p4b-1),2,6,5,1,4,3,1.0d0)
      call sd_E_5(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort))
      END IF
      IF ((t_p4b .eq. p6b) .and. (t_p5b .eq. p4b) .and. (t_p6b .eq. p5b)
     & .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h3b) .and. (t_h3b .eq. h
     &2b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
ccx     &mb(k_range+p5b-1),int_mb(k_range+p4b-1),2,6,5,4,1,3,-1.0d0)
      call sd_E_6(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort))
      END IF
      IF ((t_p4b .eq. p4b) .and. (t_p5b .eq. p6b) .and. (t_p6b .eq. p5b)
     & .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h2b) .and. (t_h3b .eq. h
     &3b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
ccx     &mb(k_range+p5b-1),int_mb(k_range+p4b-1),6,2,5,4,3,1,-1.0d0)
      call sd_E_7(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort))
      END IF
      IF ((t_p4b .eq. p4b) .and. (t_p5b .eq. p6b) .and. (t_p6b .eq. p5b)
     & .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h1b) .and. (t_h3b .eq. h
     &2b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
ccx     &mb(k_range+p5b-1),int_mb(k_range+p4b-1),6,2,5,1,4,3,-1.0d0)
      call sd_E_8(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort))
      END IF
      IF ((t_p4b .eq. p4b) .and. (t_p5b .eq. p6b) .and. (t_p6b .eq. p5b)
     & .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h3b) .and. (t_h3b .eq. h
     &2b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
ccx     &mb(k_range+p5b-1),int_mb(k_range+p4b-1),6,2,5,4,1,3,1.0d0)
      call sd_E_9(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort))
      END IF
ccx      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('cr_ccsd_t_E_1',9,MA
ccx     &_ERR)
c
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsd_t_singles_1',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsd_t_singles_1',8
     &,MA_ERR)
c
      END IF
      END IF
      END IF
c
      END IF
      END IF
      END IF
      END IF
c
      END IF
      END DO
      RETURN
      END
      SUBROUTINE cr_ccsd_t_E_2(d_a,k_a_offset,d_b,k_b_offset,a_c,t_p4b,t
     &_p5b,t_p6b,t_h1b,t_h2b,t_h3b)
C     $Id$
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p4 p5 p6 h1 h2 h3 )_ttt + = -2/3 * P( 9 ) * t ( p4 h1 )_t * i1 ( p5 p6 h2 h3 )_tt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER t_p4b
      INTEGER t_p5b
      INTEGER t_p6b
      INTEGER t_h1b
      INTEGER t_h2b
      INTEGER t_h3b
      INTEGER p4b
      INTEGER p5b
      INTEGER p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p4b_1
      INTEGER h1b_1
      INTEGER p5b_2
      INTEGER p6b_2
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
c -- peta-exa --
      INTEGER a3(9,6)
      INTEGER ia6,ja6
c --------------
      DOUBLE PRECISION a_c(*)
      LOGICAL skipped
c
cc      DO p4b = noab+1,noab+nvab
cc      DO p5b = noab+1,noab+nvab
cc      DO p6b = p5b,noab+nvab
cc      DO h1b = 1,noab
cc      DO h2b = 1,noab
cc      DO h3b = h2b,noab
c
        a3(1,1)=t_p4b
        a3(1,2)=t_p5b
        a3(1,3)=t_p6b
        a3(1,4)=t_h1b
        a3(1,5)=t_h2b
        a3(1,6)=t_h3b
c
        a3(2,1)=t_p4b
        a3(2,2)=t_p5b
        a3(2,3)=t_p6b
        a3(2,4)=t_h2b
        a3(2,5)=t_h1b
        a3(2,6)=t_h3b
c
        a3(3,1)=t_p4b
        a3(3,2)=t_p5b
        a3(3,3)=t_p6b
        a3(3,4)=t_h3b
        a3(3,5)=t_h1b
        a3(3,6)=t_h2b
c
        a3(4,1)=t_p5b
        a3(4,2)=t_p4b
        a3(4,3)=t_p6b
        a3(4,4)=t_h1b
        a3(4,5)=t_h2b
        a3(4,6)=t_h3b
c
        a3(5,1)=t_p5b
        a3(5,2)=t_p4b
        a3(5,3)=t_p6b
        a3(5,4)=t_h2b
        a3(5,5)=t_h1b
        a3(5,6)=t_h3b
c
        a3(6,1)=t_p5b
        a3(6,2)=t_p4b
        a3(6,3)=t_p6b
        a3(6,4)=t_h3b
        a3(6,5)=t_h1b
        a3(6,6)=t_h2b
c
        a3(7,1)=t_p6b
        a3(7,2)=t_p4b
        a3(7,3)=t_p5b
        a3(7,4)=t_h1b
        a3(7,5)=t_h2b
        a3(7,6)=t_h3b
c
        a3(8,1)=t_p6b
        a3(8,2)=t_p4b
        a3(8,3)=t_p5b
        a3(8,4)=t_h2b
        a3(8,5)=t_h1b
        a3(8,6)=t_h3b
c
        a3(9,1)=t_p6b
        a3(9,2)=t_p4b
        a3(9,3)=t_p5b
        a3(9,4)=t_h3b
        a3(9,5)=t_h1b
        a3(9,6)=t_h2b
c
        do ia6=1,8
         if(a3(ia6,1).ne.0) then
         do ja6=ia6+1,9
          if((a3(ia6,1).eq.a3(ja6,1)).and.(a3(ia6,2).eq.a3(ja6,2))
     &     .and.(a3(ia6,3).eq.a3(ja6,3)).and.(a3(ia6,4).eq.a3(ja6,4))
     &     .and.(a3(ia6,5).eq.a3(ja6,5)).and.(a3(ia6,6).eq.a3(ja6,6)))
     &     then
           a3(ja6,1)=0
           a3(ja6,2)=0
           a3(ja6,3)=0
           a3(ja6,4)=0
           a3(ja6,5)=0
           a3(ja6,6)=0
          end if
         enddo 
         end if
        enddo 
c
      do ia6=1,9
      p4b=a3(ia6,1)
      p5b=a3(ia6,2)
      p6b=a3(ia6,3)
      h1b=a3(ia6,4)
      h2b=a3(ia6,5)
      h3b=a3(ia6,6)
      if((p5b.le.p6b).and.(h2b.le.h3b).and.(p4b.ne.0)) then
      skipped = .false.
      IF (.not.skipped) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+i
     &nt_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_t,ieor(irrep_t,irrep_t))) TH
     &EN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_m
     &b(k_range+h3b-1)
ccx      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
ccx     & ERRQUIT('cr_ccsd_t_E_2',0,MA_ERR)
ccx      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p4b,h1b,p4b_1,h1b_1)
      CALL TCE_RESTRICTED_4(p5b,p6b,h2b,h3b,p5b_2,p6b_2,h2b_2,h3b_2)
      dim_common = 1
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb
     &(k_range+h2b-1) * int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('cr_ccsd_t_E_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &cr_ccsd_t_E_2',2,MA_ERR)
      CALL GET_HASH_BLOCK_MA(dbl_mb(d_a),dbl_mb(k_a),dima,
     & int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p4b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('cr_ccsd_t_E_2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('cr_ccsd_t_E_2',4,MA_ERR)
ccx      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
ccx     &cr_ccsd_t_E_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b_sort),
     &dimb,int_mb(k_b_offset),(h3b_2
     & - 1 + noab * (h2b_2 - 1 + noab * (p6b_2 - noab - 1 + nvab * (p5b_
     &2 - noab - 1)))))
ccx      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p5b-1)
ccx     &,int_mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
ccx     &,4,3,2,1,1.0d0)
ccx      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('cr_ccsd_t_E_2',6,MA_ERR)
ccx      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
ccx     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
ccx     &t),dima_sort)
ccx      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('cr_ccsd_t_E_2',7,MA
ccx     &_ERR)
ccx      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('cr_ccsd_t_E_2',8,MA
ccx     &_ERR)
ccx      END IF
ccx      END IF
ccx      END IF
      IF ((t_p4b .eq. p4b) .and. (t_p5b .eq. p5b) .and. (t_p6b .eq. p6b)
     & .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h2b) .and. (t_h3b .eq. h
     &3b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+h2b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_
ccx     &mb(k_range+h1b-1),int_mb(k_range+p4b-1),6,4,3,5,2,1,-2.0d0/3.0d0)
      call sd_E2_1(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort),-2.0d0/3.0d0)
      END IF
      IF ((t_p4b .eq. p4b) .and. (t_p5b .eq. p5b) .and. (t_p6b .eq. p6b)
     & .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h1b) .and. (t_h3b .eq. h
     &3b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+h2b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_
ccx     &mb(k_range+h1b-1),int_mb(k_range+p4b-1),6,4,3,2,5,1,2.0d0/3.0d0)
      call sd_E2_2(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort),2.0d0/3.0d0)
      END IF
      IF ((t_p4b .eq. p4b) .and. (t_p5b .eq. p5b) .and. (t_p6b .eq. p6b)
     & .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h3b) .and. (t_h3b .eq. h
     &1b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+h2b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_
ccx     &mb(k_range+h1b-1),int_mb(k_range+p4b-1),6,4,3,2,1,5,-2.0d0/3.0d0)
      call sd_E2_3(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort),-2.0d0/3.0d0)
      END IF
      IF ((t_p4b .eq. p5b) .and. (t_p5b .eq. p4b) .and. (t_p6b .eq. p6b)
     & .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h2b) .and. (t_h3b .eq. h
     &3b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+h2b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_
ccx     &mb(k_range+h1b-1),int_mb(k_range+p4b-1),4,6,3,5,2,1,2.0d0/3.0d0)
      call sd_E2_4(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort),2.0d0/3.0d0)
      END IF
      IF ((t_p4b .eq. p5b) .and. (t_p5b .eq. p4b) .and. (t_p6b .eq. p6b)
     & .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h1b) .and. (t_h3b .eq. h
     &3b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+h2b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_
ccx     &mb(k_range+h1b-1),int_mb(k_range+p4b-1),4,6,3,2,5,1,-2.0d0/3.0d0)
      call sd_E2_5(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort),-2.0d0/3.0d0)
      END IF
      IF ((t_p4b .eq. p5b) .and. (t_p5b .eq. p4b) .and. (t_p6b .eq. p6b)
     & .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h3b) .and. (t_h3b .eq. h
     &1b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+h2b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_
ccx     &mb(k_range+h1b-1),int_mb(k_range+p4b-1),4,6,3,2,1,5,2.0d0/3.0d0)
      call sd_E2_6(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort),2.0d0/3.0d0)
      END IF
      IF ((t_p4b .eq. p5b) .and. (t_p5b .eq. p6b) .and. (t_p6b .eq. p4b)
     & .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h2b) .and. (t_h3b .eq. h
     &3b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+h2b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_
ccx     &mb(k_range+h1b-1),int_mb(k_range+p4b-1),4,3,6,5,2,1,-2.0d0/3.0d0)
      call sd_E2_7(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort),-2.0d0/3.0d0)
      END IF
      IF ((t_p4b .eq. p5b) .and. (t_p5b .eq. p6b) .and. (t_p6b .eq. p4b)
     & .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h1b) .and. (t_h3b .eq. h
     &3b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+h2b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_
ccx     &mb(k_range+h1b-1),int_mb(k_range+p4b-1),4,3,6,2,5,1,2.0d0/3.0d0)
      call sd_E2_8(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort),2.0d0/3.0d0)
      END IF
      IF ((t_p4b .eq. p5b) .and. (t_p5b .eq. p6b) .and. (t_p6b .eq. p4b)
     & .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h3b) .and. (t_h3b .eq. h
     &1b)) THEN
ccx      CALL TCE_SORTACC_6(dbl_mb(k_c_sort),a_c,int_mb(k_range+h3b-1),int_
ccx     &mb(k_range+h2b-1),int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),int_
ccx     &mb(k_range+h1b-1),int_mb(k_range+p4b-1),4,3,6,2,1,5,-2.0d0/3.0d0)
      call sd_E2_9(int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),
     1               int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),
     2               int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),
     4               a_c,dbl_mb(k_a_sort),dbl_mb(k_b_sort),-2.0d0/3.0d0)
      END IF
ccx      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('cr_ccsd_t_E_2',9,MA
ccx     &_ERR)
c
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsd_t_singles_1',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsd_t_singles_1',8
     &,MA_ERR)
c
      END IF
      END IF
      END IF
c
      END IF
      END IF
      END IF
      END IF
c
      END IF
      END DO
      RETURN
      END
      SUBROUTINE cr_ccsd_t_E_2_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_o
     &ffset)
C     $Id$
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p4 p5 h1 h2 )_tt + = -1/4 * P( 4 ) * t ( p4 h1 )_t * t ( p5 h2 )_t
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER nxtask
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p4b_1
      INTEGER h1b_1
      INTEGER p5b_2
      INTEGER h2b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL nxtask
      nprocs = GA_NNODES()
      count = 0
      next = nxtask(nprocs,1)
      DO p4b = noab+1,noab+nvab
      DO p5b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_t,irrep_t)) TH
     &EN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('cr_ccsd_t_E_2_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p4b,h1b,p4b_1,h1b_1)
      CALL TCE_RESTRICTED_2(p5b,h2b,p5b_2,h2b_2)
      dim_common = 1
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p5b-1) * int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('cr_ccsd_t_E_2_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &cr_ccsd_t_E_2_1',2,MA_ERR)
      CALL GET_HASH_BLOCK_MA(dbl_mb(d_a),dbl_mb(k_a),dima,
     & int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p4b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('cr_ccsd_t_E_2_1',3,MA_ER
     &R)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('cr_ccsd_t_E_2_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &cr_ccsd_t_E_2_1',5,MA_ERR)
      CALL GET_HASH_BLOCK_MA(dbl_mb(d_b),dbl_mb(k_b),dimb,
     & int_mb(k_b_offset),(h2b_2
     & - 1 + noab * (p5b_2 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h2b-1),2,1,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('cr_ccsd_t_E_2_1',6,MA_ER
     &R)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('cr_ccsd_t_E_2_1',7,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('cr_ccsd_t_E_2_1',8,
     &MA_ERR)
      END IF
      END IF
      END IF
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &cr_ccsd_t_E_2_1',9,MA_ERR)
      IF ((p4b .le. p5b) .and. (h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1)
     &,4,2,3,1,-1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + nvab * (p4b - noab
     & - 1)))))
      END IF
      IF ((p4b .le. p5b) .and. (h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1)
     &,4,2,1,3,1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (p5b - noab - 1 + nvab * (p4b - noab
     & - 1)))))
      END IF
      IF ((p5b .le. p4b) .and. (h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1)
     &,2,4,3,1,1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p5b - noab
     & - 1)))))
      END IF
      IF ((p5b .le. p4b) .and. (h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1)
     &,2,4,1,3,-1.0d0/4.0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (p4b - noab - 1 + nvab * (p5b - noab
     & - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('cr_ccsd_t_E_2_1',10,MA_E
     &RR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('cr_ccsd_t_E_2_1',11
     &,MA_ERR)
      END IF
      END IF
      END IF
      next = nxtask(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = nxtask(-nprocs,1)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_cr_ccsd_t_E_2_1(l_a_offset,k_a_offset,size)
C     $Id$
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p4 p5 h1 h2 )_tt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p4b
      INTEGER p5b
      INTEGER h1b
      INTEGER h2b
      length = 0
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_t,irrep_t)) TH
     &EN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('cr_ccsd_t_E_2_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_t,irrep_t)) TH
     &EN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      addr = addr + 1
      int_mb(k_a_offset+addr) = h2b - 1 + noab * (h1b - 1 + noab * (p5b 
     &- noab - 1 + nvab * (p4b - noab - 1)))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
c
c
c
c
      subroutine sd_E_1(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t2sub,t1sub)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h3d,h2d,h1d,p6d,p5d,p4d)
      double precision t1sub(p6d,h3d)
      double precision t2sub(p4d,p5d,h1d,h2d)
      do p4=1,p4d
      do p5=1,p5d
      do p6=1,p6d
      do h1=1,h1d
      do h2=1,h2d
      do h3=1,h3d
       triplesx(h3,h2,h1,p6,p5,p4)=triplesx(h3,h2,h1,p6,p5,p4)
     1   + t1sub(p6,h3)*t2sub(p4,p5,h1,h2)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E_2(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t2sub,t1sub)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h2d,h1d,h3d,p6d,p5d,p4d)
      double precision t1sub(p6d,h3d)
      double precision t2sub(p4d,p5d,h1d,h2d)
      do p4=1,p4d
      do p5=1,p5d
      do p6=1,p6d
      do h3=1,h3d
      do h1=1,h1d
      do h2=1,h2d
       triplesx(h2,h1,h3,p6,p5,p4)=triplesx(h2,h1,h3,p6,p5,p4)
     1   + t1sub(p6,h3)*t2sub(p4,p5,h1,h2)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E_3(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t2sub,t1sub)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h2d,h3d,h1d,p6d,p5d,p4d)
      double precision t1sub(p6d,h3d)
      double precision t2sub(p4d,p5d,h1d,h2d)
      do p4=1,p4d
      do p5=1,p5d
      do p6=1,p6d
      do h1=1,h1d
      do h3=1,h3d
      do h2=1,h2d
       triplesx(h2,h3,h1,p6,p5,p4)=triplesx(h2,h3,h1,p6,p5,p4)
     1   - t1sub(p6,h3)*t2sub(p4,p5,h1,h2)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E_4(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t2sub,t1sub)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h3d,h2d,h1d,p5d,p4d,p6d)
      double precision t1sub(p6d,h3d)
      double precision t2sub(p4d,p5d,h1d,h2d)
      do p6=1,p6d
      do p4=1,p4d
      do p5=1,p5d
      do h1=1,h1d
      do h2=1,h2d
      do h3=1,h3d
       triplesx(h3,h2,h1,p5,p4,p6)=triplesx(h3,h2,h1,p5,p4,p6)
     1   + t1sub(p6,h3)*t2sub(p4,p5,h1,h2)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E_5(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t2sub,t1sub)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h2d,h1d,h3d,p5d,p4d,p6d)
      double precision t1sub(p6d,h3d)
      double precision t2sub(p4d,p5d,h1d,h2d)
      do p6=1,p6d
      do p4=1,p4d
      do p5=1,p5d
      do h3=1,h3d
      do h1=1,h1d
      do h2=1,h2d
       triplesx(h2,h1,h3,p5,p4,p6)=triplesx(h2,h1,h3,p5,p4,p6)
     1   + t1sub(p6,h3)*t2sub(p4,p5,h1,h2)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E_6(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t2sub,t1sub)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h2d,h3d,h1d,p5d,p4d,p6d)
      double precision t1sub(p6d,h3d)
      double precision t2sub(p4d,p5d,h1d,h2d)
      do p6=1,p6d
      do p4=1,p4d
      do p5=1,p5d
      do h1=1,h1d
      do h3=1,h3d
      do h2=1,h2d
       triplesx(h2,h3,h1,p5,p4,p6)=triplesx(h2,h3,h1,p5,p4,p6)
     1   - t1sub(p6,h3)*t2sub(p4,p5,h1,h2)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E_7(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t2sub,t1sub)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h3d,h2d,h1d,p5d,p6d,p4d)
      double precision t1sub(p6d,h3d)
      double precision t2sub(p4d,p5d,h1d,h2d)
      do p4=1,p4d
      do p6=1,p6d
      do p5=1,p5d
      do h1=1,h1d
      do h2=1,h2d
      do h3=1,h3d
       triplesx(h3,h2,h1,p5,p6,p4)=triplesx(h3,h2,h1,p5,p6,p4)
     1   - t1sub(p6,h3)*t2sub(p4,p5,h1,h2)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E_8(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t2sub,t1sub)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h2d,h1d,h3d,p5d,p6d,p4d)
      double precision t1sub(p6d,h3d)
      double precision t2sub(p4d,p5d,h1d,h2d)
      do p4=1,p4d
      do p6=1,p6d
      do p5=1,p5d
      do h3=1,h3d
      do h1=1,h1d
      do h2=1,h2d
       triplesx(h2,h1,h3,p5,p6,p4)=triplesx(h2,h1,h3,p5,p6,p4)
     1   - t1sub(p6,h3)*t2sub(p4,p5,h1,h2)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E_9(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t2sub,t1sub)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h2d,h3d,h1d,p5d,p6d,p4d)
      double precision t1sub(p6d,h3d)
      double precision t2sub(p4d,p5d,h1d,h2d)
      do p4=1,p4d
      do p6=1,p6d
      do p5=1,p5d
      do h1=1,h1d
      do h3=1,h3d
      do h2=1,h2d
       triplesx(h2,h3,h1,p5,p6,p4)=triplesx(h2,h3,h1,p5,p6,p4)
     1   + t1sub(p6,h3)*t2sub(p4,p5,h1,h2)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
c
c
      subroutine sd_E2_1(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t1sub,v2sub,twot)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h3d,h2d,h1d,p6d,p5d,p4d)
      double precision t1sub(p4d,h1d)
      double precision v2sub(h3d,h2d,p6d,p5d)
      double precision twot
      do p4=1,p4d
      do p5=1,p5d
      do p6=1,p6d
      do h1=1,h1d
      do h2=1,h2d
      do h3=1,h3d
       triplesx(h3,h2,h1,p6,p5,p4)=triplesx(h3,h2,h1,p6,p5,p4)
     1   + twot * t1sub(p4,h1)*v2sub(h3,h2,p6,p5)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E2_2(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t1sub,v2sub,twot)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h3d,h1d,h2d,p6d,p5d,p4d)
      double precision t1sub(p4d,h1d)
      double precision v2sub(h3d,h2d,p6d,p5d)
      double precision twot
      do p4=1,p4d
      do p5=1,p5d
      do p6=1,p6d
      do h2=1,h2d
      do h1=1,h1d
      do h3=1,h3d
       triplesx(h3,h1,h2,p6,p5,p4)=triplesx(h3,h1,h2,p6,p5,p4)
     1   + twot * t1sub(p4,h1)*v2sub(h3,h2,p6,p5)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E2_3(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t1sub,v2sub,twot)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h1d,h3d,h2d,p6d,p5d,p4d)
      double precision t1sub(p4d,h1d)
      double precision v2sub(h3d,h2d,p6d,p5d)
      double precision twot
      do p4=1,p4d
      do p5=1,p5d
      do p6=1,p6d
      do h2=1,h2d
      do h3=1,h3d
      do h1=1,h1d
       triplesx(h1,h3,h2,p6,p5,p4)=triplesx(h1,h3,h2,p6,p5,p4)
     1   + twot * t1sub(p4,h1)*v2sub(h3,h2,p6,p5)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E2_4(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t1sub,v2sub,twot)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h3d,h2d,h1d,p6d,p4d,p5d)
      double precision t1sub(p4d,h1d)
      double precision v2sub(h3d,h2d,p6d,p5d)
      double precision twot
      do p5=1,p5d
      do p4=1,p4d
      do p6=1,p6d
      do h1=1,h1d
      do h2=1,h2d
      do h3=1,h3d
       triplesx(h3,h2,h1,p6,p4,p5)=triplesx(h3,h2,h1,p6,p4,p5)
     1   + twot * t1sub(p4,h1)*v2sub(h3,h2,p6,p5)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E2_5(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t1sub,v2sub,twot)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h3d,h1d,h2d,p6d,p4d,p5d)
      double precision t1sub(p4d,h1d)
      double precision v2sub(h3d,h2d,p6d,p5d)
      double precision twot
      do p5=1,p5d
      do p4=1,p4d
      do p6=1,p6d
      do h2=1,h2d
      do h1=1,h1d
      do h3=1,h3d
       triplesx(h3,h1,h2,p6,p4,p5)=triplesx(h3,h1,h2,p6,p4,p5)
     1   + twot * t1sub(p4,h1)*v2sub(h3,h2,p6,p5)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E2_6(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t1sub,v2sub,twot)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h1d,h3d,h2d,p6d,p4d,p5d)
      double precision t1sub(p4d,h1d)
      double precision v2sub(h3d,h2d,p6d,p5d)
      double precision twot
      do p5=1,p5d
      do p4=1,p4d
      do p6=1,p6d
      do h2=1,h2d
      do h3=1,h3d
      do h1=1,h1d
       triplesx(h1,h3,h2,p6,p4,p5)=triplesx(h1,h3,h2,p6,p4,p5)
     1   + twot * t1sub(p4,h1)*v2sub(h3,h2,p6,p5)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E2_7(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t1sub,v2sub,twot)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h3d,h2d,h1d,p4d,p6d,p5d)
      double precision t1sub(p4d,h1d)
      double precision v2sub(h3d,h2d,p6d,p5d)
      double precision twot
      do p5=1,p5d
      do p6=1,p6d
      do p4=1,p4d
      do h1=1,h1d
      do h2=1,h2d
      do h3=1,h3d
       triplesx(h3,h2,h1,p4,p6,p5)=triplesx(h3,h2,h1,p4,p6,p5)
     1   + twot * t1sub(p4,h1)*v2sub(h3,h2,p6,p5)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E2_8(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t1sub,v2sub,twot)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h3d,h1d,h2d,p4d,p6d,p5d)
      double precision t1sub(p4d,h1d)
      double precision v2sub(h3d,h2d,p6d,p5d)
      double precision twot
      do p5=1,p5d
      do p6=1,p6d
      do p4=1,p4d
      do h2=1,h2d
      do h1=1,h1d
      do h3=1,h3d
       triplesx(h3,h1,h2,p4,p6,p5)=triplesx(h3,h1,h2,p4,p6,p5)
     1   + twot * t1sub(p4,h1)*v2sub(h3,h2,p6,p5)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
c
      subroutine sd_E2_9(h3d,h2d,h1d,p6d,p5d,p4d,
     2               triplesx,t1sub,v2sub,twot)
      IMPLICIT NONE
      integer h3d,h2d,h1d,p6d,p5d,p4d
      integer h3,h2,h1,p6,p5,p4
      double precision triplesx(h1d,h3d,h2d,p4d,p6d,p5d)
      double precision t1sub(p4d,h1d)
      double precision v2sub(h3d,h2d,p6d,p5d)
      double precision twot
      do p5=1,p5d
      do p6=1,p6d
      do p4=1,p4d
      do h2=1,h2d
      do h3=1,h3d
      do h1=1,h1d
       triplesx(h1,h3,h2,p4,p6,p5)=triplesx(h1,h3,h2,p4,p6,p5)
     1   + twot * t1sub(p4,h1)*v2sub(h3,h2,p6,p5)
      enddo
      enddo
      enddo
      enddo
      enddo
      enddo
      return
      end
