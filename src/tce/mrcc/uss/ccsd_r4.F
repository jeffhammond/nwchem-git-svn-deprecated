      SUBROUTINE ccsd_r4(a_i0,d_i1_1,d_i1_2,d_t2,d_v2,k_i1_offset_1,k_i1
     &_offset_2,k_t2_offset,k_v2_offset,l_i1_offset_1,l_i1_offset_2,t_h1
     &b,t_h2b,t_h3b,t_h4b,t_p5b,t_p6b,t_p7b,t_p8b,toggle)
C     $Id: tce.py,v 1.10 2002/12/01 21:37:34 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p5 p6 p7 p8 h1 h2 h3 h4 )_vtt + = -3/2 * P( 24 ) * Sum ( h9 ) * t ( p5 p6 h1 h9 )_t * i1 ( h9 p7 p8 h2 h3 h4 )_vt
C         i1 ( h9 p5 p6 h1 h2 h3 )_vt + = 1/3 * P( 3 ) * Sum ( h10 ) * t ( p5 p6 h1 h10 )_t * v ( h9 h10 h2 h3 )_v
C         i1 ( h9 p5 p6 h1 h2 h3 )_vt + = 2/3 * P( 6 ) * Sum ( p10 ) * t ( p5 p10 h1 h2 )_t * v ( h9 p6 h3 p10 )_v
C     i0 ( p5 p6 p7 p8 h1 h2 h3 h4 )_vtt + = -3/2 * P( 24 ) * Sum ( p9 ) * t ( p5 p9 h1 h2 )_t * i1 ( p6 p7 p8 h3 h4 p9 )_vt
C         i1 ( p5 p6 p7 h1 h2 p9 )_vt + = 1/3 * P( 3 ) * Sum ( p10 ) * t ( p5 p10 h1 h2 )_t * v ( p6 p7 p9 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "util.fh"
#include "errquit.fh"
#include "tce.fh"
#include "tce_main.fh"
      INTEGER t_p5b
      INTEGER t_p6b
      INTEGER t_p7b
      INTEGER t_p8b
      INTEGER t_h1b
      INTEGER t_h2b
      INTEGER t_h3b
      INTEGER t_h4b
      INTEGER toggle
      INTEGER d_t2
      INTEGER k_t2_offset
      INTEGER d_i1_1
      INTEGER k_i1_offset_1
      INTEGER l_i1_offset_1
      INTEGER d_i1_2
      INTEGER k_i1_offset_2
      INTEGER l_i1_offset_2
      INTEGER d_v2
      INTEGER k_v2_offset
      INTEGER size_i1_1
      INTEGER size_i1_2
      DOUBLE PRECISION a_i0(*)
      CHARACTER*255 filename
       logical nodezero
c
      nodezero = (ga_nodeid().eq.0)
c
      IF (toggle .eq. 3) THEN
      CALL DELETEFILE(d_i1_2)
      IF (.not.MA_POP_STACK(l_i1_offset_2)) CALL ERRQUIT('ccsd_r4',-1,MA
     &_ERR)
      END IF
      IF (toggle .eq. 3) THEN
      CALL DELETEFILE(d_i1_1)
      IF (.not.MA_POP_STACK(l_i1_offset_1)) CALL ERRQUIT('ccsd_r4',-1,MA
     &_ERR)
      END IF
      IF (toggle .eq. 1) CALL OFFSET_ccsd_r4_1_1(l_i1_offset_1,k_i1_offs
     &et_1,size_i1_1)
      IF (toggle .eq. 1) CALL TCE_FILENAME('ccsd_r4_1_1_i1',filename)
      IF (toggle .eq. 1) CALL CREATEFILE(filename,d_i1_1,size_i1_1)
c     if(nodezero)write(*,*)size_i1_1
      IF (toggle .eq. 1) CALL ccsd_r4_1_1(d_t2,k_t2_offset,d_v2,k_v2_off
     &set,d_i1_1,k_i1_offset_1)
c     if(nodezero)write(*,*)'out1'
      IF (toggle .eq. 1) CALL ccsd_r4_1_2(d_t2,k_t2_offset,d_v2,k_v2_off
     &set,d_i1_1,k_i1_offset_1)
c     if(nodezero)write(*,*)'out2'
      IF (toggle .eq. 1) CALL RECONCILEFILE(d_i1_1,size_i1_1)
      IF (toggle .eq. 2) CALL ccsd_r4_1(d_t2,k_t2_offset,d_i1_1,k_i1_off
     &set_1,a_i0,t_p5b,t_p6b,t_p7b,t_p8b,t_h1b,t_h2b,t_h3b,t_h4b)
c     if(nodezero)write(*,*)'out3'
      IF (toggle .eq. 1) CALL OFFSET_ccsd_r4_2_1(l_i1_offset_2,k_i1_offs
     &et_2,size_i1_2)
c     if(nodezero)write(*,*)size_i1_2
      IF (toggle .eq. 1) CALL TCE_FILENAME('ccsd_r4_2_1_i1',filename)
      IF (toggle .eq. 1) CALL CREATEFILE(filename,d_i1_2,size_i1_2)
      IF (toggle .eq. 1) CALL ccsd_r4_2_1(d_t2,k_t2_offset,d_v2,k_v2_off
     &set,d_i1_2,k_i1_offset_2)
c     if(nodezero)write(*,*)'out4'
      IF (toggle .eq. 1) CALL RECONCILEFILE(d_i1_2,size_i1_2)
      IF (toggle .eq. 2) CALL ccsd_r4_2(d_t2,k_t2_offset,d_i1_2,k_i1_off
     &set_2,a_i0,t_p5b,t_p6b,t_p7b,t_p8b,t_h1b,t_h2b,t_h3b,t_h4b)
c     if(nodezero)write(*,*)'out5'
      RETURN
      END
      SUBROUTINE ccsd_r4_1(d_a,k_a_offset,d_b,k_b_offset,a_c,t_p5b,t_p6b
     &,t_p7b,t_p8b,t_h1b,t_h2b,t_h3b,t_h4b)
C     $Id: tce.py,v 1.10 2002/12/01 21:37:34 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p5 p6 p7 p8 h1 h2 h3 h4 )_vtt + = -3/2 * P( 24 ) * Sum ( h9 ) * t ( p5 p6 h1 h9 )_t * i1 ( h9 p7 p8 h2 h3 h4 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
#include "tce_main.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER t_p5b
      INTEGER t_p6b
      INTEGER t_p7b
      INTEGER t_p8b
      INTEGER t_h1b
      INTEGER t_h2b
      INTEGER t_h3b
      INTEGER t_h4b
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER p8b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER h4b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h9b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h9b_1
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER h9b_2
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER h4b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      integer logtoint
      integer holep,particlep
      DOUBLE PRECISION a_c(*)
      LOGICAL skipped
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h1b = 1,noab
      DO h2b = 1,noab
      DO h3b = h2b,noab
      DO h4b = h3b,noab
      skipped = .true.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h1b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h1b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h1b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h1b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h1b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p8b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p8b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p8b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p8b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h1b)) skipped = .fals
     &e.
      IF (.not.skipped) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1
     &)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+h1b-1)+i
     &nt_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1).ne.1
     &6)) THEN
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     &+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-
     &1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),int_mb(k_sym+h4b-1)
     &))))))) .eq. ieor(irrep_v,ieor(irrep_t,irrep_t))) THEN

      particlep= logtoint(log_mb(k_active+p5b-1))+
     1  logtoint(log_mb(k_active+p6b-1))+
     1  logtoint(log_mb(k_active+p7b-1))+
     1  logtoint(log_mb(k_active+p8b-1))
       holep=logtoint(log_mb(k_active+h1b-1))+
     1  logtoint(log_mb(k_active+h2b-1))+
     1  logtoint(log_mb(k_active+h3b-1))+
     1  logtoint(log_mb(k_active+h4b-1))
      if((holep.eq.2).and.(particlep.eq.2))then


      dimc = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_ra
     &nge+p7b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+h1b-1) * int_m
     &b(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsd_r4_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h9b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p6b,h1b,h9b,p5b_1,p6b_1,h1b_1,h9b_1)
      CALL TCE_RESTRICTED_6(p7b,p8b,h9b,h2b,h3b,h4b,p7b_2,p8b_2,h9b_2,h2
     &b_2,h3b_2,h4b_2)
      dim_common = int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb
     &(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_mb
     &(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsd_r4_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsd_r4_1',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,4,2,1,3,-1.0d0)
      END IF
      IF ((h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,3,2,1,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsd_r4_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsd_r4_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsd_r4_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h4b_2
     & - 1 + noab * (h3b_2 - 1 + noab * (h2b_2 - 1 + noab * (h9b_2 - 1 +
     & noab * (p8b_2 - noab - 1 + nvab * (p7b_2 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h4b-1),6,5,4,2,1,3,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsd_r4_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsd_r4_1',7,MA_ERR
     &)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsd_r4_1',8,MA_ERR
     &)
      END IF
      END IF
      END IF
      END DO
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),8,7,5,4,6,3,2,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),8,7,5,4,3,6,2,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),8,7,5,4,3,2,6,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h1b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),8,7,5,4,3,2,1,6,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),5,8,7,4,6,3,2,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),5,8,7,4,3,6,2,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),5,8,7,4,3,2,6,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h1b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),5,8,7,4,3,2,1,6,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),8,5,7,4,6,3,2,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),8,5,7,4,3,6,2,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),8,5,7,4,3,2,6,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p6b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h1b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),8,5,7,4,3,2,1,6,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),5,8,4,7,6,3,2,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),5,8,4,7,3,6,2,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),5,8,4,7,3,2,6,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h1b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),5,8,4,7,3,2,1,6,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),8,5,4,7,6,3,2,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),8,5,4,7,3,6,2,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),8,5,4,7,3,2,6,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h1b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),8,5,4,7,3,2,1,6,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p8b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),5,4,8,7,6,3,2,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p8b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),5,4,8,7,3,6,2,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p8b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),5,4,8,7,3,2,6,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p7b) .and. (t_p6b .eq. p8b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p6b) .and. (t_h1b .eq. h2b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h1b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-1),int_
     &mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+p6b-1),int_
     &mb(k_range+p5b-1),5,4,8,7,3,2,1,6,3.0d0/2.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsd_r4_1',9,MA_ERR
     &)
      endif
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsd_r4_1_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offse
     &t)
C     $Id: tce.py,v 1.10 2002/12/01 21:37:34 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h9 p5 p6 h1 h2 h3 )_vt + = 1/3 * P( 3 ) * Sum ( h10 ) * t ( p5 p6 h1 h10 )_t * v ( h9 h10 h2 h3 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
#include "tce_main.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
!      INTEGER NXTVAL
      INTEGER NXTASK
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p5b
      INTEGER p6b
      INTEGER h9b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h10b
      INTEGER p5b_1
      INTEGER p6b_1
      INTEGER h1b_1
      INTEGER h10b_1
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
!      EXTERNAL NXTVAL
      EXTERNAL NXTASK
!
      integer logtoint
      integer holep,particlep
!
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h9b = 1,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      DO h3b = h2b,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+i
     &nt_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+h9b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN
c
      particlep= logtoint(log_mb(k_active+p5b-1))+
     1  logtoint(log_mb(k_active+p6b-1))
       holep=logtoint(log_mb(k_active+h1b-1))+
     1  logtoint(log_mb(k_active+h2b-1))+
     1  logtoint(log_mb(k_active+h3b-1))+
     1  logtoint(log_mb(k_active+h9b-1))
      
        if(holep.ge.1) then
c
      dimc = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_m
     &b(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsd_r4_1_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h10b = 1,noab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p6b,h1b,h10b,p5b_1,p6b_1,h1b_1,h10b_1)
      CALL TCE_RESTRICTED_4(h9b,h10b,h2b,h3b,h9b_2,h10b_2,h2b_2,h3b_2)
      dim_common = int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb
     &(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h9b-1) * int_mb(k_range+h2b-1) * int_mb
     &(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsd_r4_1_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsd_r4_1_1',2,MA_ERR)
      IF ((h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-1
     &),4,2,1,3,-1.0d0)
      END IF
      IF ((h1b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p6b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h1b-1),int_mb(k_range+h10b-1
     &),3,2,1,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsd_r4_1_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsd_r4_1_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsd_r4_1_1',5,MA_ERR)
      IF ((h10b .lt. h9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h3b_2
     & - 1 + (noab+nvab) * (h2b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab
     &+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),4,3,2,1,-1.0d0)
      END IF
      IF ((h9b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(h3b_2
     & - 1 + (noab+nvab) * (h2b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),4,3,1,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsd_r4_1_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsd_r4_1_1',7,MA_E
     &RR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsd_r4_1_1',8,MA_E
     &RR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsd_r4_1_1',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),6,5,3,4,2,1,1.0d0/3.0
     &d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h9b - 1 + noab * 
     &(p6b - noab - 1 + nvab * (p5b - noab - 1)))))))
      END IF
      IF ((h2b .le. h1b) .and. (h1b .le. h3b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),6,5,3,2,4,1,-1.0d0/3.
     &0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h3b -
     & 1 + noab * (h1b - 1 + noab * (h2b - 1 + noab * (h9b - 1 + noab * 
     &(p6b - noab - 1 + nvab * (p5b - noab - 1)))))))
      END IF
      IF ((h3b .le. h1b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+p5b-1),6,5,3,2,1,4,1.0d0/3.0
     &d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h1b -
     & 1 + noab * (h3b - 1 + noab * (h2b - 1 + noab * (h9b - 1 + noab * 
     &(p6b - noab - 1 + nvab * (p5b - noab - 1)))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsd_r4_1_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsd_r4_1_1',11,MA_
     &ERR)
      endif
      END IF
      END IF
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsd_r4_1_1(l_a_offset,k_a_offset,size)
C     $Id: tce.py,v 1.10 2002/12/01 21:37:34 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h9 p5 p6 h1 h2 h3 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
#include "tce_main.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p5b
      INTEGER p6b
      INTEGER h9b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      integer logtoint
      integer holep,particlep
c
      length = 0
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h9b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+i
     &nt_mb(k_spin+h3b-1).ne.12)) THEN

      particlep= logtoint(log_mb(k_active+p5b-1))+
     1  logtoint(log_mb(k_active+p6b-1))
       holep=logtoint(log_mb(k_active+h1b-1))+
     1  logtoint(log_mb(k_active+h2b-1))+
     1  logtoint(log_mb(k_active+h3b-1))+
     1  logtoint(log_mb(k_active+h9b-1))

      if(holep.ge.1)then

      length = length + 1

      endif
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsd_r4_1_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO h9b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+i
     &nt_mb(k_spin+h3b-1).ne.12)) THEN

      particlep= logtoint(log_mb(k_active+p5b-1))+
     1  logtoint(log_mb(k_active+p6b-1))
       holep=logtoint(log_mb(k_active+h1b-1))+
     1  logtoint(log_mb(k_active+h2b-1))+
     1  logtoint(log_mb(k_active+h3b-1))+
     1  logtoint(log_mb(k_active+h9b-1))

      if(holep.ge.1)then

      addr = addr + 1
      int_mb(k_a_offset+addr) = h3b - 1 + noab * (h2b - 1 + noab * (h1b 
     &- 1 + noab * (h9b - 1 + noab * (p6b - noab - 1 + nvab * (p5b - noa
     &b - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_
     &mb(k_range+h9b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) 
     &* int_mb(k_range+h3b-1)

      endif
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsd_r4_1_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offse
     &t)
C     $Id: tce.py,v 1.10 2002/12/01 21:37:34 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( h9 p5 p6 h1 h2 h3 )_vt + = 2/3 * P( 6 ) * Sum ( p10 ) * t ( p5 p10 h1 h2 )_t * v ( h9 p6 h3 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
#include "tce_main.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER nxtask
!      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p5b
      INTEGER p6b
      INTEGER h9b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER p5b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER p6b_2
      INTEGER h9b_2
      INTEGER h3b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
c      EXTERNAL NXTVAL
      EXTERNAL nxtask
      integer logtoint
      integer holep,particlep
c
      nprocs = GA_NNODES()
      count = 0
      next = NXTASK(nprocs,1)
      DO p5b = noab+1,noab+nvab
      DO p6b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = 1,noab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1
     &)+int_mb(k_spin+h9b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+i
     &nt_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+h9b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+h9b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN
c
      particlep= logtoint(log_mb(k_active+p5b-1))+
     1  logtoint(log_mb(k_active+p6b-1))
       holep=logtoint(log_mb(k_active+h1b-1))+
     1  logtoint(log_mb(k_active+h2b-1))+
     1  logtoint(log_mb(k_active+h3b-1))+
     1  logtoint(log_mb(k_active+h9b-1))
c
       if(holep.ge.1) then
      dimc = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_ra
     &nge+h9b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_m
     &b(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsd_r4_1_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p10b,h1b,h2b,p5b_1,p10b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(p6b,h9b,h3b,p10b,p6b_2,h9b_2,h3b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1)
      dima_sort = int_mb(k_range+p5b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p6b-1) * int_mb(k_range+h9b-1) * int_mb
     &(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsd_r4_1_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsd_r4_1_2',2,MA_ERR)
      IF ((p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p10b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,2,1,-1.0d0)
      END IF
      IF ((p5b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,1,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsd_r4_1_2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsd_r4_1_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsd_r4_1_2',5,MA_ERR)
      IF ((h9b .le. p6b) .and. (h3b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (h3b_2 - 1 + (noab+nvab) * (p6b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p6b-1),int_mb(k_range+h3b-1),int_mb(k_range+p10b-1
     &),3,1,2,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsd_r4_1_2',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsd_r4_1_2',7,MA_E
     &RR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsd_r4_1_2',8,MA_E
     &RR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsd_r4_1_2',9,MA_ERR)
      IF ((p5b .le. p6b) .and. (h2b .le. h3b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p6b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),6,3,2,5,4,1,2.0d0/3.0
     &d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h9b - 1 + noab * 
     &(p6b - noab - 1 + nvab * (p5b - noab - 1)))))))
      END IF
      IF ((p5b .le. p6b) .and. (h3b .le. h1b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p6b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),6,3,2,1,5,4,2.0d0/3.0
     &d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (h9b - 1 + noab * 
     &(p6b - noab - 1 + nvab * (p5b - noab - 1)))))))
      END IF
      IF ((p5b .le. p6b) .and. (h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p6b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),6,3,2,5,1,4,-2.0d0/3.
     &0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (h9b - 1 + noab * 
     &(p6b - noab - 1 + nvab * (p5b - noab - 1)))))))
      END IF
      IF ((p6b .le. p5b) .and. (h2b .le. h3b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p6b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),3,6,2,5,4,1,-2.0d0/3.
     &0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h9b - 1 + noab * 
     &(p5b - noab - 1 + nvab * (p6b - noab - 1)))))))
      END IF
      IF ((p6b .le. p5b) .and. (h3b .le. h1b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p6b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),3,6,2,1,5,4,-2.0d0/3.
     &0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (h9b - 1 + noab * 
     &(p5b - noab - 1 + nvab * (p6b - noab - 1)))))))
      END IF
      IF ((p6b .le. p5b) .and. (h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p6b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),3,6,2,5,1,4,2.0d0/3.0
     &d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (h9b - 1 + noab * 
     &(p5b - noab - 1 + nvab * (p6b - noab - 1)))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsd_r4_1_2',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsd_r4_1_2',11,MA_
     &ERR)
      endif
      END IF
      END IF
      END IF
      next = NXTASK(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTASK(-nprocs,1)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ccsd_r4_2(d_a,k_a_offset,d_b,k_b_offset,a_c,t_p5b,t_p6b
     &,t_p7b,t_p8b,t_h1b,t_h2b,t_h3b,t_h4b)
C     $Id: tce.py,v 1.10 2002/12/01 21:37:34 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i0 ( p5 p6 p7 p8 h1 h2 h3 h4 )_vtt + = -3/2 * P( 24 ) * Sum ( p9 ) * t ( p5 p9 h1 h2 )_t * i1 ( p6 p7 p8 h3 h4 p9 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
#include "tce_main.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER t_p5b
      INTEGER t_p6b
      INTEGER t_p7b
      INTEGER t_p8b
      INTEGER t_h1b
      INTEGER t_h2b
      INTEGER t_h3b
      INTEGER t_h4b
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER p8b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER h4b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p5b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER h3b_2
      INTEGER h4b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      integer logtoint
      integer holep,particlep
      DOUBLE PRECISION a_c(*)
      LOGICAL skipped
      DO p5b = noab+1,noab+nvab
      DO p6b = noab+1,noab+nvab
      DO p7b = p6b,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = 1,noab
      DO h4b = h3b,noab
      skipped = .true.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &4b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h2b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &4b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h2b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &4b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h2b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p5b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p5b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p5b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p5b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p5b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) skipped = .fals
     &e.
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p5b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &4b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h2b)) skipped = .fals
     &e.
      IF (.not.skipped) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1
     &)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+h1b-1)+i
     &nt_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1).ne.1
     &6)) THEN
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     &+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-
     &1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h4b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),int_mb(k_sym+h4b-1)
     &))))))) .eq. ieor(irrep_v,ieor(irrep_t,irrep_t))) THEN


      particlep= logtoint(log_mb(k_active+p5b-1))+
     1  logtoint(log_mb(k_active+p6b-1))+
     1  logtoint(log_mb(k_active+p7b-1))+
     1  logtoint(log_mb(k_active+p8b-1))
       holep=logtoint(log_mb(k_active+h1b-1))+
     1  logtoint(log_mb(k_active+h2b-1))+
     1  logtoint(log_mb(k_active+h3b-1))+
     1  logtoint(log_mb(k_active+h4b-1))
      if((holep.eq.2).and.(particlep.eq.2))then

      dimc = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_ra
     &nge+p7b-1) * int_mb(k_range+p8b-1) * int_mb(k_range+h1b-1) * int_m
     &b(k_range+h2b-1) * int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsd_r4_2',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p9b,h1b,h2b,p5b_1,p9b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_6(p6b,p7b,p8b,h3b,h4b,p9b,p6b_2,p7b_2,p8b_2,h3
     &b_2,h4b_2,p9b_2)
      dim_common = int_mb(k_range+p9b-1)
      dima_sort = int_mb(k_range+p5b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1) * int_mb
     &(k_range+p8b-1) * int_mb(k_range+h3b-1) * int_mb(k_range+h4b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsd_r4_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsd_r4_2',2,MA_ERR)
      IF ((p9b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p9b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,-1.0d0)
      END IF
      IF ((p5b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - noab - 1 + nvab * (p5b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,1,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsd_r4_2',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsd_r4_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsd_r4_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (h4b_2 - 1 + noab * (h3b_2 - 1 + noab * (p8b_
     &2 - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p6b_2 - noab - 1
     &)))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h4b-1),int_mb(k_range+p9b-1),5,4,3,2,1,6,1.0d0)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsd_r4_2',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsd_r4_2',7,MA_ERR
     &)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsd_r4_2',8,MA_ERR
     &)
      END IF
      END IF
      END IF
      END DO
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),8,5,4,3,7,6,2,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),8,5,4,3,2,7,6,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),8,5,4,3,7,2,6,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),8,5,4,3,2,7,1,6,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),8,5,4,3,7,2,1,6,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p5b) .and. (t_p6b .eq. p6b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &4b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h2b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),8,5,4,3,2,1,7,6,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,8,4,3,7,6,2,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,8,4,3,2,7,6,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,8,4,3,7,2,6,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,8,4,3,2,7,1,6,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,8,4,3,7,2,1,6,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p5b) .and. (t_p7b .eq. p7b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &4b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h2b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,8,4,3,2,1,7,6,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,4,8,3,7,6,2,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,4,8,3,2,7,6,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,4,8,3,7,2,6,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,4,8,3,2,7,1,6,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,4,8,3,7,2,1,6,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p5b)
     & .and. (t_p8b .eq. p8b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &4b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h2b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,4,8,3,2,1,7,6,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p5b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &2b) .and. (t_h3b .eq. h3b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,4,3,8,7,6,2,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p5b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,4,3,8,2,7,6,1,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p5b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h2b) .and. (t_h4b .eq. h4b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,4,3,8,7,2,6,1,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p5b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &1b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,4,3,8,2,7,1,6,-3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p5b) .and. (t_h1b .eq. h1b) .and. (t_h2b .eq. h
     &3b) .and. (t_h3b .eq. h4b) .and. (t_h4b .eq. h2b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,4,3,8,7,2,1,6,3.0d0/2.0d0)
      END IF
      IF ((t_p5b .eq. p6b) .and. (t_p6b .eq. p7b) .and. (t_p7b .eq. p8b)
     & .and. (t_p8b .eq. p5b) .and. (t_h1b .eq. h3b) .and. (t_h2b .eq. h
     &4b) .and. (t_h3b .eq. h1b) .and. (t_h4b .eq. h2b)) THEN
      CALL TCE_SORTACC_8(dbl_mb(k_c_sort),a_c,int_mb(k_range+h4b-1),int_
     &mb(k_range+h3b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),int_
     &mb(k_range+p6b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_
     &mb(k_range+p5b-1),5,4,3,8,2,1,7,6,3.0d0/2.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsd_r4_2',9,MA_ERR
     &)
      endif
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ccsd_r4_2_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_offse
     &t)
C     $Id: tce.py,v 1.10 2002/12/01 21:37:34 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p5 p6 p7 h1 h2 p9 )_vt + = 1/3 * P( 3 ) * Sum ( p10 ) * t ( p5 p10 h1 h2 )_t * v ( p6 p7 p9 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
#include "tce_main.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER nxtask
!      INTEGER NXTVAL
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h1b
      INTEGER h2b
      INTEGER p9b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER p5b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER p6b_2
      INTEGER p7b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      EXTERNAL nxtask
      integer logtoint
      integer holep,particlep
      nprocs = GA_NNODES()
      count = 0
      next = nxtask(nprocs,1)
      DO p5b = noab+1,noab+nvab
      DO p6b = noab+1,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO p9b = noab+1,noab+nvab
      IF (next.eq.count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1
     &)+int_mb(k_spin+p7b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+i
     &nt_mb(k_spin+p9b-1).ne.12)) THEN
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+p9b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN

      particlep= logtoint(log_mb(k_active+p5b-1))+
     1  logtoint(log_mb(k_active+p6b-1))+
     1  logtoint(log_mb(k_active+p7b-1))+
     1  logtoint(log_mb(k_active+p9b-1))
       holep=logtoint(log_mb(k_active+h1b-1))+
     1  logtoint(log_mb(k_active+h2b-1))

      if(particlep.ge.1)then

      dimc = int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_mb(k_ra
     &nge+p7b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_m
     &b(k_range+p9b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c_sort,k_c_sort)) CALL
     & ERRQUIT('ccsd_r4_2_1',0,MA_ERR)
      CALL DFILL(dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p5b,p10b,h1b,h2b,p5b_1,p10b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(p6b,p7b,p9b,p10b,p6b_2,p7b_2,p9b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1)
      dima_sort = int_mb(k_range+p5b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p6b-1) * int_mb(k_range+p7b-1) * int_mb
     &(k_range+p9b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a_sort,k_a_sort)) CALL
     & ERRQUIT('ccsd_r4_2_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dima,'noname',l_a,k_a)) CALL ERRQUIT('
     &ccsd_r4_2_1',2,MA_ERR)
      IF ((p10b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p10b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,2,1,-1.0d0)
      END IF
      IF ((p5b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,int_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,1,2,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ccsd_r4_2_1',3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b_sort,k_b_sort)) CALL
     & ERRQUIT('ccsd_r4_2_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,dimb,'noname',l_b,k_b)) CALL ERRQUIT('
     &ccsd_r4_2_1',5,MA_ERR)
      IF ((p10b .lt. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noa
     &b+nvab) * (p6b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p10b-1),int_mb(k_range+p9b-1
     &),4,2,1,3,-1.0d0)
      END IF
      IF ((p9b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,int_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noa
     &b+nvab) * (p6b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p6b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1
     &),3,2,1,4,1.0d0)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ccsd_r4_2_1',6,MA_ERR)
      CALL DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb(k_a
     &_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sor
     &t),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ccsd_r4_2_1',7,MA_E
     &RR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ccsd_r4_2_1',8,MA_E
     &RR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,dimc,'noname',l_c,k_c)) CALL ERRQUIT('
     &ccsd_r4_2_1',9,MA_ERR)
      IF ((p5b .le. p6b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p6b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),6,3,2,5,4,1,1.0d0/3.0
     &d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p9b -
     & noab - 1 + nvab * (h2b - 1 + noab * (h1b - 1 + noab * (p7b - noab
     & - 1 + nvab * (p6b - noab - 1 + nvab * (p5b - noab - 1)))))))
      END IF
      IF ((p6b .le. p5b) .and. (p5b .le. p7b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p6b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),3,6,2,5,4,1,-1.0d0/3.
     &0d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p9b -
     & noab - 1 + nvab * (h2b - 1 + noab * (h1b - 1 + noab * (p7b - noab
     & - 1 + nvab * (p5b - noab - 1 + nvab * (p6b - noab - 1)))))))
      END IF
      IF ((p7b .le. p5b)) THEN
      CALL TCE_SORT_6(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p6b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),3,2,6,5,4,1,1.0d0/3.0
     &d0)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,int_mb(k_c_offset),(p9b -
     & noab - 1 + nvab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab
     & - 1 + nvab * (p7b - noab - 1 + nvab * (p6b - noab - 1)))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ccsd_r4_2_1',10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ccsd_r4_2_1',11,MA_
     &ERR)
      endif
      END IF
      END IF
      END IF
      next = nxtask(nprocs,1)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = nxtask(-nprocs,1)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ccsd_r4_2_1(l_a_offset,k_a_offset,size)
C     $Id: tce.py,v 1.10 2002/12/01 21:37:34 sohirata Exp $
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     Copyright (c) Battelle & Pacific Northwest National Laboratory (2002)
C     i1 ( p5 p6 p7 h1 h2 p9 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
#include "tce_main.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER size
      INTEGER length
      INTEGER addr
      INTEGER p5b
      INTEGER p6b
      INTEGER p7b
      INTEGER h1b
      INTEGER h2b
      INTEGER p9b
      integer logtoint
      integer holep,particlep
      length = 0
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO p9b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+p9b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1
     &)+int_mb(k_spin+p7b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+i
     &nt_mb(k_spin+p9b-1).ne.12)) THEN

      particlep= logtoint(log_mb(k_active+p5b-1))+
     1  logtoint(log_mb(k_active+p6b-1))+
     1  logtoint(log_mb(k_active+p7b-1))+
     1  logtoint(log_mb(k_active+p9b-1))
       holep=logtoint(log_mb(k_active+h1b-1))+
     1  logtoint(log_mb(k_active+h2b-1))

      if(particlep.ge.1)then

      length = length + 1
      
      endif
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_int,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ccsd_r4_2_1',0,MA_ERR)
      int_mb(k_a_offset) = length
      addr = 0
      size = 0
      DO p5b = noab+1,noab+nvab
      DO p6b = p5b,noab+nvab
      DO p7b = p6b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO p9b = noab+1,noab+nvab
      IF (int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+p9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p5b-1),ieor(int_mb(k_sym+p6b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+p9b-1)))))) .eq. ieor(irrep_v,irrep_t)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p5b-1)+int_mb(k_spin+p6b-1
     &)+int_mb(k_spin+p7b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+i
     &nt_mb(k_spin+p9b-1).ne.12)) THEN

      particlep= logtoint(log_mb(k_active+p5b-1))+
     1  logtoint(log_mb(k_active+p6b-1))+
     1  logtoint(log_mb(k_active+p7b-1))+
     1  logtoint(log_mb(k_active+p9b-1))
       holep=logtoint(log_mb(k_active+h1b-1))+
     1  logtoint(log_mb(k_active+h2b-1))

      if(particlep.ge.1)then

      addr = addr + 1
      int_mb(k_a_offset+addr) = p9b - noab - 1 + nvab * (h2b - 1 + noab 
     &* (h1b - 1 + noab * (p7b - noab - 1 + nvab * (p6b - noab - 1 + nva
     &b * (p5b - noab - 1)))))
      int_mb(k_a_offset+length+addr) = size
      size = size + int_mb(k_range+p5b-1) * int_mb(k_range+p6b-1) * int_
     &mb(k_range+p7b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) 
     &* int_mb(k_range+p9b-1)

      endif
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
